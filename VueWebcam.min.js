const Vue=require("vue").default,WebcamComponent=Vue.extend({render:function(e){return e("video",{ref:"video",attrs:{width:this.width,height:this.height,src:this.src,autoplay:this.autoplay}})},props:{autoplay:{type:Boolean,default:!0},width:{type:Number,default:400},height:{type:Number,default:300},mirror:{type:Boolean,default:!0},screenshotFormat:{type:String,default:"image/jpeg"}},data:()=>({video:"",src:"",stream:"",hasUserMedia:!1,styleObject:{transform:"scale(-1, 1)",filter:"FlipH"}}),methods:{getPhoto(){if(!this.hasUserMedia)return null;return this.getCanvas().toDataURL(this.screenshotFormat)},getCanvas(){if(!this.hasUserMedia)return null;const e=this.$refs.video;if(!this.ctx){const t=document.createElement("canvas");t.height=e.clientHeight,t.width=e.clientWidth,this.canvas=t,this.ctx=t.getContext("2d")}const{ctx:t,canvas:a}=this;return t.drawImage(e,0,0,a.width,a.height),a}},mounted:function(){this.video=this.$refs.video,navigator.getUserMedia=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia||navigator.oGetUserMedia,navigator.getUserMedia&&navigator.getUserMedia({video:!0},e=>{this.video.srcObject=e,this.stream=e,this.hasUserMedia=!0},e=>{console.log(e)})},beforeDestroy:function(){this.video.pause(),this.src="",this.stream.getTracks()[0].stop()},destroyed:function(){console.log("Destroyed")}}),VueWebcam=Vue.component("vue-webcam",WebcamComponent);module.exports=VueWebcam;
